{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Pages/FeedData.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","Pages/AboutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","target","rel","HomeNavContainer","styled","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","getMostEditsUsers","a","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","value","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","key","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","settings","getData","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","rotation","lineWidth","spacing","fill","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","d","ProportionFlagged","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","AboutPage","faLink","faGithub","App","basename","process","exact","path","component","TestPage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.267b68bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.5378cb25.svg\";","import React from 'react';\n\nclass TitleContainer extends React.Component {\n  render() {\n    return (\n      <div className=\" text-left\">\n        <h1 className=\"text-left  display-3\">\n          <b>{this.props.title}</b>\n        </h1>\n        <h4>{this.props.subtitle}</h4>\n      </div>\n    );\n  }\n}\n\nexport default TitleContainer;\n","import React, { Component } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n//Creates the Navbar shown on all pages\n\nclass NavbarLocal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { history: this.props.history };\n  }\n  render() {\n    // var isActive = this.context.router.route.location.pathname\n    const activePage = window.location.href;\n    return (\n      <Navbar>\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link\n              as={Link}\n              to=\"/\"\n              className={\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Home\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/about-page\"\n              className={\n                activePage.endsWith('/about-page')\n                  ? 'nav-link--active'\n                  : 'nav-link'\n              }\n            >\n              About Us\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/page\"\n              className={\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Dashboard\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/feed\"\n              className={\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Feed\n            </Nav.Link>\n\n            <a\n              as={Link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/isobelm/Software-Engineering\"\n              className={\n                activePage.endsWith('/ksknc') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Github Project\n            </a>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavbarLocal;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//This class takes in a title and a description and displays them as shown on the homepage\n\nclass HomeNavContainer extends Component {\n  render() {\n    return (\n      <div className=\"ting\">\n        <h2 className={this.props.styled}>{this.props.btnTitle1}</h2>\n        <h2 className={this.props.styled}>{this.props.btnTitle2}</h2>\n        <br />\n        <Link to={this.props.btnLink}>\n          <button type=\"button\" className={this.props.btnStyle}>\n            {this.props.btnText}\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default HomeNavContainer;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup } from 'react-bootstrap';\nimport $ from 'jquery';\n\n//These load the statistics from a server we set up and displays them on the homepage\n\nclass HomeStats extends Component {\n  state = {\n    text: 'something',\n    errorCode: 'Loading...',\n  };\n\n  componentDidMount() {\n    this.updateStats();\n    this.intervalID = setInterval(() => this.updateStats(), 5000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  updateStats = () => {\n    $.ajax({\n      url:\n        'https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics',\n      type: 'GET',\n      success: function(response) {\n        $('#div1').html(\n          $($(response).find('.mw-statistics-articles')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div2').html(\n          $($(response).find('.mw-statistics-edits')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div3').html(\n          $($(response).find('.mw-statistics-users')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div4').html(\n          $($(response).find('.mw-statistics-users-active')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row col-lg-12 mx-auto col-12 justify-content-center  homeStatContainer text-left\">\n            \n\n            <div className=\"col-lg-3 col-12 homeStat\">\n            <h1 id=\"div1\">{this.state.errorCode}</h1>\n            <h1>Items</h1>\n            </div>\n\n            <div className=\"col-lg-3 col-12 homeStat\">\n            <h1 id=\"div2\">{this.state.errorCode}</h1>\n            <h1>Edits</h1>\n            </div>\n\n            <div className=\"col-lg-3 col-12 homeStat\">\n            <h1 id=\"div3\">{this.state.errorCode}</h1>\n            <h1>Users</h1>\n            </div>\n\n            <div className=\"col-lg-3 col-12  homeStat\">\n            <h1 id=\"div4\">{this.state.errorCode}</h1>\n            <h1>Active Users</h1>\n            </div>\n            \n          \n           \n        \n           \n      \n            \n      \n      </div>\n    );\n  }\n}\n\nexport default HomeStats;\n","import React, { Component } from 'react';\nimport TitleContainer from '../Components/TitleContainer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport HomeNavContainer from '../Components/HomeNavContainer';\nimport HomeStatsContainer from '../Components/HomeStats';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\n          <div className=\"col-lg-5 col-sm-12\">\n            <TitleContainer\n              title=\"Wikidata Live\"\n              subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\n            />\n          </div>\n          <div className=\"col-lg-7 col-sm-12 homeNav\">\n            <div className=\"row\">\n              <div className=\"col-lg-4 col-sm-12\">\n                <h1 className=\"text-red\">\n                  <FontAwesomeIcon icon={faBars} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-red\"\n                  btnStyle=\"align-bottom btn btn-outline-red\"\n                  btnTitle1=\"About\"\n                  btnTitle2=\"Us\"\n                  btnText=\"About\"\n                  btnLink=\"/about-page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\n                <h1 className=\"text-green\">\n                  <FontAwesomeIcon icon={faChartLine} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-green\"\n                  btnStyle=\"align-bottom btn btn-outline-green\"\n                  btnTitle1=\"Wikidata\"\n                  btnTitle2=\"Dashboard\"\n                  btnText=\"Dashboard\"\n                  btnLink=\"/page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\n                <h1 className=\"text-blue\">\n                  <FontAwesomeIcon icon={faUser} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-blue\"\n                  btnStyle=\"align-bottom btn btn-outline-blue\"\n                  btnTitle1=\"User\"\n                  btnTitle2=\"Data\"\n                  btnText=\"Users\"\n                  btnLink=\"/most-active-users\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"statsContent row justify-content-center\">\n          <HomeStatsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php';\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/';\nconst MAX_QUERY_SIZE = 50;\nconst NUM_RETRIES = 5;\n\n/**\n * @typedef {Object} User\n * @property {number} userid - The user's id\n * @property {number} name - The user's name\n * @property {number} editcount - The number of edits the user did\n * @property {number} recentactions - The number of actions a user did within\n *           30 days\n * @property {Array} groups - An array of strings which contains the groups\n *           the user belongs in. For example if the user contains \"bot\", it is\n *           a non human user\n */\n\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most edits in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostEditsUsers = async () => {\n  const compare = (a, b) => b.editcount - a.editcount;\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  };\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.allusers)\n    .then(users => users.sort(compare));\n  return users;\n};\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most recent actions in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostActiveUsers = async () => {\n  const compare = (a, b) => b.recentactions - a.recentactions;\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  };\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.allusers)\n    .then(users => users.sort(compare));\n  return users;\n};\n\nexport const getRecentEditsWithSize = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|sizes|timestamp',\n    rclimit: '500',\n  };\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    result => result.query.recentchanges\n  );\n  return await edits;\n};\n\nexport const getRecentEditsWithFlags = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'ids',\n    rclimit: '50',\n  };\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    result => result.query.recentchanges\n  );\n\n  let revids = await edits;\n  revids = revids.map(recentChange => recentChange.revid);\n  let scores = await getScore(revids);\n\n  const data = [\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\n  ];\n\n  scores = await scores;\n\n  Object.values(scores).forEach(score => {\n    if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === true\n    ) {\n      data[0].value += 1;\n    } else if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === false\n    ) {\n      data[2].value += 1;\n    } else {\n      data[1].value += 1;\n    }\n  });\n\n  return data;\n};\n\n/**\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\n * So large additions and large deletions are included\n */\nexport const getRecentLargestEdits = async () => {\n  const editList = await getRecentEditsWithSize();\n\n  editList.forEach(item => {\n    item.value = Math.abs(item.newlen - item.oldlen);\n    item.id = item.revid.toString();\n    item.label = item.title;\n  });\n\n  editList.sort((a, b) => b.value - a.value);\n\n  return editList;\n};\n\n/**\n * @typedef {Object} PageInfo\n * @property {string} id - The id of the page\n * @property {actions} actions - Number of actions which has been performed on\n *           that page\n * @property {string} title - The title of the page\n */\n\n/**\n * Returns an array of most active pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<PageInfo[]> | string)[]}\n */\nexport const getMostActivePages = async prevTimestamp => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\n  const activePages = recentChanges.then(recentChanges =>\n    countPageOccurances(recentChanges)\n  );\n  return [await activePages, newTimestamp];\n};\n\n/**\n * Returns an array of most users pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<User[]> | string)[]}\n */\nexport const getRecentActiveUsers = async prevTimestamp => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\n  const activeUsers = recentChanges.then(activeUsers =>\n    countUsers(activeUsers)\n  );\n  return [await activeUsers, newTimestamp];\n};\n\n/**\n * Batches a query to cirumvent the 50 items query limit\n *\n * @param {string} itemsKey the query key\n * @param {Array} items the items to add to the query\n * @param {string} endpoint the endpoint url\n * @param {Object} params the parameters of the query\n */\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\n  const result = [];\n  let batches = null;\n  if (items instanceof Array) {\n    batches = createBatch(items, MAX_QUERY_SIZE);\n  } else {\n    batches = [[items]];\n  }\n  const results = batches.map(async batch => {\n    params[itemsKey] = batch.join('|');\n    return query(endpoint, params, NUM_RETRIES)\n      .then(data => result.push(data))\n      .catch(err => null);\n  });\n  await Promise.all(results);\n  return result;\n};\n\n/**\n * @typedef {Object} RecentChanges\n * @property {number} newlen - the number of bytes the page uses after the change\n * @property {number} ns\n * @property {number} old_revid - The old revision id\n * @property {number} oldlen - the number of bytes the page uses before the change\n * @property {number} pageid - The page id\n * @property {number} rcid - The recent change id\n * @property {number} revid - The current revision id\n * @property {string} timestamp - Timestamp of change\n * @property {string} title - Title of the page changed\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\n * @property {string} user - The username of the editor\n */\n\n/**\n * Queries the API for the most recent changes\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<RecentChanges[]> | string)[]}\n */\nexport const queryRecentChanges = prevTimestamp => {\n  let tmpTimestamp = new Date();\n  const newTimestamp = tmpTimestamp.toISOString();\n  tmpTimestamp = tmpTimestamp - 1000;\n  tmpTimestamp = new Date(tmpTimestamp).toISOString();\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|timestamp|user|sizes',\n    rclimit: 'max',\n    rcstart: tmpTimestamp,\n    rcend: prevTimestamp,\n  };\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.recentchanges)\n    .then(recentChanges => {\n      const revisionIds = recentChanges.map(recentChange => recentChange.revid);\n      return getScore(revisionIds).then(scores =>\n        recentChanges.map(recentChange => {\n          recentChange.scores = scores[recentChange.revid];\n          return recentChange;\n        })\n      );\n    });\n  return [recentChanges, newTimestamp];\n};\n\n/**\n * Returns the groups of each username in the input array\n *\n * @param {string[]} userNames - an array of usernames to fetch the group of\n * @returns {Map.<string, string[]>} - map of username to an array of groups\n *         they belong to\n */\nexport const getUserGroups = userNames => {\n  const key = 'ususers';\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'users',\n    usprop: 'groups',\n  };\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(data => {\n    const groups = {};\n    data.forEach(queryResult => {\n      const users = queryResult.query.users;\n      users.forEach(userObj => {\n        if (userObj.groups) {\n          groups[userObj.name] = userObj.groups;\n        }\n      });\n    });\n    return groups;\n  });\n  return groups;\n};\n\n// ~ Helper Functions ---------------------------------------------------------\n\n/**\n * Returns a the response of a query to the Wikidata API endpoint\n *\n * @param {Object} params - Object of parameters to use when querying\n * @param {number} n - Number of times to retry if failure occurs\n * @returns {Promise.<Object>}\n */\nconst query = async (endpoint, params, n) => {\n  try {\n    const paramsString = new URLSearchParams(params).toString();\n    const url = endpoint + '?' + paramsString + '&origin=*';\n    return await fetch(url).then(response => response.json());\n  } catch (err) {\n    if (n === 1) {\n      throw err;\n    }\n    return await setTimeout(query(endpoint, params, n - 1), 500);\n  }\n};\n\n/**\n * Retruns the score of the revision id to find out if the edit was harmful or not\n *\n * @param {number[]} revisionIds - Revision ids to obtain the score of\n * @returns {Promise.<Object>}\n */\nconst getScore = async revisionIds => {\n  if (revisionIds.length === 0) {\n    return;\n  }\n  const key = 'revids';\n  const params = {};\n  let scores = {};\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\n    resultBatch => {\n      resultBatch.forEach(\n        result => (scores = { ...scores, ...result.wikidatawiki?.scores })\n      );\n      return scores;\n    }\n  );\n};\n\n/**\n * Returns the number of times a page appeared on the recent changes feed sorted by\n * number of actions done on the page\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countPageOccurances = recentChanges => {\n  const compare = (a, b) => b.actions - a.actions;\n  const titleCounts = {};\n  recentChanges.forEach(change => {\n    const actions = titleCounts[change.title] || 0;\n    titleCounts[change.title] = actions + 1;\n  });\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\n    id,\n    actions,\n  }));\n  titles.sort(compare);\n  return titles;\n};\n\n/**\n * Returns the number of times a user appeared on the recent changes feed sorted by\n * number of actions done by that user\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countUsers = recentChanges => {\n  const compare = (a, b) => b.actions - a.actions;\n  const userCounts = {};\n  recentChanges.forEach(change => {\n    const user = change.user;\n    const numActions = userCounts[user] || 0;\n    userCounts[user] = numActions + 1;\n  });\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\n    username,\n    actions,\n  }));\n  const userNames = users.map(({ username }) => username);\n  getUserGroups(userNames).then(groups => {\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]));\n    users.sort(compare);\n  });\n  return users;\n};\n\n/**\n * Splits up an array into smaller arrays\n *\n * @param {Array} array - Array to create batches from\n * @param {number} size - Batch size\n * @returns {Array} batches - An array containing the batches which are of\n *         length size\n */\nconst createBatch = (array, size) => {\n  const batches = [];\n  while (array.length > 0) {\n    batches.push(array.splice(0, size));\n  }\n  return batches;\n};\n","import { queryRecentChanges, getUserGroups } from './APIWrapper';\n\n/** Class which wraps the Wikidata API recent changes feed */\nclass FeedData {\n  /**\n   * Create a new feed data object\n   *\n   * @param {number} maxItems - the maximum number of items to keep in the\n   *        feed.\n   */\n  constructor(maxItems) {\n    this.changes = [];\n    this.maxItems = maxItems;\n    this.prevTimestamp = new Date().toISOString();\n  }\n\n  refresh() {\n    const [recentChanges, newTimeStamp] = queryRecentChanges(\n      this.prevTimestamp\n    );\n    recentChanges.then(changes => {\n      const usernames = changes.map(change => change.user);\n      getUserGroups(usernames).then(groups =>\n        changes.forEach(change => {\n          change.groups = groups[change.user];\n          this.changes.unshift(change);\n          if (this.changes.length > this.maxItems) {\n            this.changes.pop();\n          }\n        })\n      );\n    });\n    this.prevTimestamp = newTimeStamp;\n  }\n}\n\nexport default FeedData;\n","import React, { useState, useEffect } from 'react';\nimport FeedData from '../Backend/FeedData';\nimport Navbar from '../Components/Navbar';\n// eslint-disable-next-line\nimport style from '../style.css'\n\n//Creates the feed shown on the dashboard, it updates in real time and highlights suspicious changes in red\n\nfunction Feed() {\n  const [feedData] = useState(new FeedData(30));\n  const [paused, setPaused] = useState(false);\n  const [recentChanges, setRecentChanges] = useState({\n    items: [],\n  });\n\n  useEffect(() => {\n    const refresh = setInterval(() => {\n      if (!paused) {\n        feedData.refresh();\n      }\n      setRecentChanges({ items: feedData.changes });\n    }, 500);\n    return () => clearInterval(refresh);\n  }, [feedData, paused]);\n\n  function togglePause() {\n    setPaused(prevPause => !prevPause);\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\n      <form className=\"text-left\" onChange={togglePause}>\n        <label>\n          <input type=\"checkbox\" /> Paused\n        </label>\n      </form>\n      <ul className=\"list-group\">\n        {recentChanges.items.map((item, index) => (\n          <li className=\"list-group-item text-left\" key={index}>\n            <div\n              className={\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\n              }\n            >\n              {`User ${item.user} action ${item.type} on ${\n                item.title\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst getTimeDifference = toCompare =>\n  Math.round(\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\n  );\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport Feed from '../Components/Feed';\n\n\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass FeedData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"\">\n<Feed/>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default FeedData;\n","import Card from 'react-bootstrap/Card';\nimport React, { Component } from 'react';\n\nclass GraphCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      title: this.props.title,\n      pageLink: this.props.pageLink,\n      graph: this.props.graph,\n    };\n  }\n\n  onClick = () => {\n    this.state.history.push(this.state.pageLink);\n  };\n\n  render() {\n    return (\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\n        <Card.Body>\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\n          {this.state.graph}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default GraphCard;\n","import React, { Component } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\nclass SimpleBarGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    };\n\n    this.loadData();\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.indexValue}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData().then(data => {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n      this.setState({\n        loaded: true,\n        data: smlData,\n      });\n    });\n  };\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      const method = this.props.settings.refreshMethod.bind(this);\n      await method();\n    }\n  };\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh();\n    }, this.props.settings.refreshTime);\n  }\n\n  render() {\n    let margin = {};\n    let label = null;\n    let classname = '';\n    let onClick = null;\n    let clickable = false;\n    let tooltip = null;\n    let legend = [];\n    const colorBy = this.props.settings.colorBy\n      ? this.props.settings.colorBy\n      : 'index';\n    if (this.state.fullGraph) {\n      if (this.props.settings.margin) {\n        margin = this.props.settings.margin;\n      } else {\n        margin = { top: 5, right: 30, bottom: 80, left: 80 };\n      }\n      if (this.props.settings.legend) {\n        legend = [this.props.settings.legend];\n      }\n      label = true;\n      classname = 'full-graph-container';\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick;\n        clickable = true;\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this);\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      label = false;\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsiveBar\n              data={this.state.data}\n              keys={this.props.settings.keys}\n              indexBy={this.props.settings.index}\n              margin={margin}\n              padding={0.3}\n              colors={{ scheme: this.props.settings.colors }}\n              colorBy={colorBy}\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n              axisTop={null}\n              axisRight={null}\n              axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 30,\n                legend: this.props.settings.xAxis,\n                legendPosition: 'start',\n                legendOffset: 40,\n              }}\n              axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: this.props.settings.yAxis,\n                legendPosition: 'middle',\n                legendOffset: -60,\n              }}\n              enableLabel={label}\n              onClick={clickable ? onClick : function() {}}\n              animate={label}\n              isInteractive={label}\n              motionStiffness={90}\n              motionDamping={15}\n              tooltip={tooltip}\n              legends={legend}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SimpleBarGraph;\n","import React, { Component } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\n\nclass PieChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    };\n\n    this.loadData();\n  }\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh();\n    }, this.props.settings.refreshTime);\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.label}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData().then(data => {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n      this.setState({\n        loaded: true,\n        data: smlData,\n      });\n    });\n  };\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      this.loadData();\n    }\n  };\n\n  render() {\n    let margin = {};\n    let label = null;\n    let classname = '';\n    let onClick = () => {};\n    let tooltip = null;\n    let colors = { scheme: this.props.settings.colors };\n    if (this.props.settings.colorFunction) {\n      colors = this.props.settings.colorFunction;\n    }\n    if (this.state.fullGraph) {\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\n      label = true;\n      classname = 'full-graph-container';\n\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick;\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this);\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      label = false;\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsivePie\n              data={this.state.data}\n              margin={margin}\n              innerRadius={0.4}\n              padAngle={0}\n              cornerRadius={0}\n              colors={colors}\n              enableRadialLabels={label}\n              radialLabel=\"label\"\n              radialLabelsSkipAngle={10}\n              radialLabelsTextXOffset={6}\n              radialLabelsTextColor=\"#333333\"\n              radialLabelsLinkOffset={0}\n              radialLabelsLinkDiagonalLength={16}\n              radialLabelsLinkHorizontalLength={24}\n              radialLabelsLinkStrokeWidth={1}\n              radialLabelsLinkColor={{ from: 'color' }}\n              enableSlicesLabels={label}\n              slicesLabelsSkipAngle={10}\n              slicesLabelsTextColor=\"#333333\"\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              // defs={[\n              //   {\n              //     id: 'dots',\n              //     type: 'patternDots',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     size: 4,\n              //     padding: 1,\n              //     stagger: true,\n              //   },\n              //   {\n              //     id: 'lines',\n              //     type: 'patternLines',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     rotation: -45,\n              //     lineWidth: 6,\n              //     spacing: 10,\n              //   },\n              // ]}\n              isInteractive={this.state.fullGraph}\n              onClick={onClick}\n              tooltip={tooltip}\n              defs={[\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.4)',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              fill={[\n                {\n                  match: {\n                    type: 'edit',\n                  },\n                  id: 'lines',\n                },\n              ]}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\n\nclass GraphPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n      title: this.props.name,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n\n        <div className=\"row\">\n          <div className=\"col-lg-3 col-12 infobox\">\n            <h2>{this.state.title}</h2>\n            <p />\n            <p>{this.props.explanation}</p>\n            <p>\n              <form onChange={this.props.handlePause}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"paused\"\n                    name=\"paused\"\n                    value={this.props.paused}\n                  />{' '}\n                  {'Paused'}\n                </label>\n              </form>\n            </p>\n          </div>\n          <div className=\"col-lg-9 col-12\">\n            {this.props.graph}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GraphPage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\n\nexport const MostActiveUsersGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(userAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].username === userAdditions.username) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += userAdditions.actions;\n        } else {\n          fullData.push(userAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n      smlData.forEach(user => {\n        if (user.groups !== undefined && user.groups.includes('bot')) {\n          user.bot = user.actions;\n          user.human = 0;\n        } else {\n          user.bot = 0;\n          user.human = user.actions;\n        }\n      });\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['bot', 'human'],\n  index: 'username',\n  xAxis: 'username',\n  yAxis: 'actions',\n  colors: 'set2',\n  colorBy: 'id',\n  legend: {\n    dataFrom: 'keys',\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 120,\n    translateY: 0,\n    itemsSpacing: 2,\n    itemWidth: 100,\n    itemHeight: 20,\n    itemDirection: 'left-to-right',\n    itemOpacity: 0.85,\n    symbolSize: 20,\n    effects: [\n      {\n        on: 'hover',\n        style: {\n          itemOpacity: 1,\n        },\n      },\n    ],\n  },\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\n  onClick: function(click) {\n    window.open(\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\n      '_blank'\n    );\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass MostActiveUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActiveUsersGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Users\"\n      />\n    );\n  }\n}\nexport default MostActiveUsers;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostActivePages } from '../Backend/APIWrapper';\n\nexport const MostActivePagesGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(pageAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].id === pageAdditions.id) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += pageAdditions.actions;\n        } else {\n          fullData.push(pageAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['actions'],\n  index: 'id',\n  xAxis: 'pages',\n  yAxis: 'actions',\n  colors: 'pastel1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass MostActivePages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActivePagesGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Pages\"\n      />\n    );\n  }\n}\nexport default MostActivePages;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentLargestEdits } from '../Backend/APIWrapper';\n\nexport const LargestRecentEditsSettings = {\n  getData: getRecentLargestEdits,\n  refreshTime: 2000,\n  refreshMethod: getRecentLargestEdits,\n  colorBy: 'type',\n  colors: 'set2',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass LargestRecentEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={LargestRecentEditsSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Largest Recent Edits\"\n      />\n    );\n  }\n}\nexport default LargestRecentEdits;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper';\n\nexport const RecentEditSizeSettings = {\n  getData: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.id = item.revid.toString();\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.label = item.title;\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.id = item.revid.toString();\n      item.label = item.title;\n    });\n    return data;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass RecentEditSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={RecentEditSizeSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Recent Edit Size\"\n      />\n    );\n  }\n}\nexport default RecentEditSize;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper';\n\nexport const ProportionFlaggedSettings = {\n  getData: getRecentEditsWithFlags,\n  refreshTime: 2000,\n  refreshMethod: getRecentEditsWithFlags,\n  colorFunction: d => d.color,\n  name: 'Proportion Of Edits Flagged',\n};\n\nclass ProportionFlagged extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation=\"The proportion of the last 50 edits that was flagged as potentially damaging.\"\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={ProportionFlaggedSettings}\n            paused={this.state.paused}\n          />\n        }\n        name={ProportionFlaggedSettings.name}\n      />\n    );\n  }\n}\nexport default ProportionFlagged;\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport GraphCard from '../Components/GraphCard';\nimport FeedData from '../Components/Feed';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport PieChart from '../Components/PieChart';\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers';\nimport { MostActivePagesGraphSettings } from './MostActivePages';\nimport { LargestRecentEditsSettings } from './LargestRecentEdits';\nimport { RecentEditSizeSettings } from './RecentEditSize';\nimport { ProportionFlaggedSettings } from './ProportionFlagged';\n\n//This is the dashboard page, it shows the feed and all of our graphs\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar />\n        <div className=\"row justify-content-left text-dark\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\n            <div className=\"feedContainer\">\n              <FeedData />\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\n            <div className=\"deck-container\">\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Recent Edit Size\"\n                  pageLink=\"recent-edit-size\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={RecentEditSizeSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title=\"Most Active Users\"\n                  pageLink=\"most-active-users\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActiveUsersGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Most Active Pages\"\n                  pageLink=\"most-active-pages\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActivePagesGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Largest Recent Edits\"\n                  pageLink=\"largest-recent-edits\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={LargestRecentEditsSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title={ProportionFlaggedSettings.name}\n                  pageLink=\"proportion-flagged\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={false}\n                      fullGraph={false}\n                      settings={ProportionFlaggedSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostEditsUsers } from '../Backend/APIWrapper';\n\nexport const UsersByMostEditsGraphSettings = {\n  getData: async function() {\n    return await getMostEditsUsers();\n  },\n  refreshTime: 2000,\n  refreshMethod: function() {\n    this.loadData();\n  },\n  keys: ['editcount'],\n  index: 'name',\n  xAxis: 'users',\n  yAxis: 'edit count',\n  colors: 'paired',\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass UsersByMostEditsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    this.setState({ paused: event.target.value });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={UsersByMostEditsGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Users By Most Edits\"\n      />\n    );\n  }\n}\nexport default UsersByMostEditsPage;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nclass AboutPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"aboutPageContainer\">\n        <Navbar history={this.state.history} />\n        <div className=\" text-left\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-sm-12  aboutPageContent\">\n              <div className=\"explainContainer text-left\">\n                <h3 className=\"text-blue\">Why we made our project</h3>\n                <p>\n                  We are a group of Computer Science students studying in\n                  Trinity College Dublin. We undertake a module in which we are\n                  given real world projects from a variety of individuals,\n                  researchers and businesses.\n                </p>\n                <p>\n                  Our clients were Fabrizio and Damien who work in the Trinity\n                  ADAPT research center and they tasked us to create a website\n                  that will visualise various changes to Wikidata in\n                  quasi-real-time. Its targeted users are researchers and should\n                  make it easier to identify spam and incorrect or malicious\n                  edits to Wikidata.\n                </p>\n              </div>\n              <br />\n              <div className=\" licenseContainer text-left\">\n                <h3 className=\"text-blue\">Licensing</h3>\n                <p>\n                  We have insured all libraries and all project dependencies\n                  licenses cover our web apps intended use.\n                </p>\n                <p>\n                  We have decided to use an{' '}\n                  <a href=\"https://opensource.org/licenses/MIT\">MIT license</a>{' '}\n                  for this project.\n                </p>\n                <p>\n                  More in depth information along with the projects source code\n                  can be found on the projects{' '}\n                  <a href=\"https://github.com/isobelm/Software-Engineering\">\n                    Github.\n                  </a>{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-sm-12 profiles\">\n              <div className=\"client\">\n                <h3 className=\"text-red\">Clients</h3>\n                <div className=\"card-deck\">\n                  <div className=\"card card-profile\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center \">Damien Graux</h5>\n                      <div className=\"text-center\">\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"GH aBlack\"\n                          href=\"https://dgraux.github.io/\"\n                        >\n                          <FontAwesomeIcon icon={faLink} />\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card card-profile\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center\">\n                        Fabrizio Orlandi\n                      </h5>\n                      <div className=\"text-center\">\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"GH aBlack\"\n                          href=\"https://www.scss.tcd.ie/personnel/orlandif\"\n                        >\n                          <FontAwesomeIcon icon={faLink} />\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <br />\n              <h3 className=\"text-red\">Students</h3>\n              <div className=\"card-deck  text-center\">\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Brian\n                      <br /> Lynch\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>3rd Year CS</b>\n                      <br />\n                      Frontend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/brianlunch\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Isobel\n                      <br /> Mahon\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>3rd Year CS</b>\n                      <br />\n                      Frontend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/isobelm\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Odhran\n                      <br /> Mullen\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>3rd Year CSB</b>\n                      <br />\n                      Backend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/omullan\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-deck text-center\">\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Alex\n                      <br /> Mahon\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>2nd Year CS</b>\n                      <br />\n                      Frontend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/Juuiko\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Flora\n                      <br /> Molnar\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>2nd Year CSB</b>\n                      <br />\n                      Frontend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/flora-m\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">\n                      Lexes\n                      <br /> Mantiquilla\n                    </h5>\n                    <p className=\"card-text\">\n                      <b>2nd Year CS</b>\n                      <br />\n                      Backend Team\n                    </p>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://github.com/lexesjan\"\n                      >\n                        <FontAwesomeIcon icon={faGithub} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport HomePage from './Pages/HomePage';\nimport history from './Utils/History';\nimport FeedData from './Pages/FeedData';\nimport TestPage from './Pages/TestPage';\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage';\nimport MostActiveUsers from './Pages/MostActiveUsers';\nimport MostActivePages from './Pages/MostActivePages';\nimport RecentEditSize from './Pages/RecentEditSize';\nimport LargestRecentEdits from './Pages/LargestRecentEdits';\nimport ProportionFlagged from './Pages/ProportionFlagged';\nimport AboutPage from './Pages/AboutPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/page\" component={TestPage} />\n          <Route\n            exact\n            path=\"/users-by-most-edits\"\n            component={UsersByMostEditsPage}\n          />\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\n          <Route\n            exact\n            path=\"/largest-recent-edits\"\n            component={LargestRecentEdits}\n          />\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\n          <Route\n            exact\n            path=\"/proportion-flagged\"\n            component={ProportionFlagged}\n          />\n          <Route exact path=\"/about-page\" component={AboutPage} />\n          <Route exact path=\"/feed\" component={FeedData} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}